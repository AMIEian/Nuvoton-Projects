<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\Modbus_Master.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\Modbus_Master.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Wed Jul 06 23:05:09 2022
<BR><P>
<H3>Maximum Stack Usage =        348 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ModbusMaster_readInputRegisters &rArr; ModbusMaster_ModbusMasterTransaction &rArr; Modbus_Master_Write &rArr; UART_Write
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[1e]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ACMP01_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[23]">ADC_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[6]">BOD_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[1a]">BPWM0_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[1b]">BPWM1_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[24]">CKFAIL_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[1e]">Default_Handler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[8]">EINT024_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[9]">EINT135_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[a]">GPABGH_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[b]">GPCDEF_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from retarget.o(.emb_text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[27]">Hard_Fault_Handler</a> from retarget.o(i.Hard_Fault_Handler) referenced from retarget.o(.emb_text)
 <LI><a href="#[18]">I2C0_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[16]">ISP_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[20]">PDMA_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[c]">PWM0_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[d]">PWM1_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[22]">PWRWU_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[15]">QSPI0_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[25]">RTC_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[2b]">Reset_Handler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[14]">SPI0_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[28]">SystemInit</a> from system_m031series.o(i.SystemInit) referenced from startup_m031series.o(.text)
 <LI><a href="#[e]">TMR0_IRQHandler</a> from main.o(i.TMR0_IRQHandler) referenced from startup_m031series.o(RESET)
 <LI><a href="#[f]">TMR1_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[10]">TMR2_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[11]">TMR3_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[12]">UART02_IRQHandler</a> from main.o(i.UART02_IRQHandler) referenced from startup_m031series.o(RESET)
 <LI><a href="#[13]">UART13_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[21]">UART46_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[17]">UART57_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[1d]">USBD_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[1c]">USCI01_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[7]">WDT_IRQHandler</a> from startup_m031series.o(.text) referenced from startup_m031series.o(RESET)
 <LI><a href="#[29]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_m031series.o(.text)
 <LI><a href="#[2a]">fputc</a> from retarget.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[29]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(.text)
</UL>
<P><STRONG><a name="[68]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[33]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[69]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[6a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[6b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[2e]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[6c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[6d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, retarget.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_m031series.o(.text))

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ACMP01_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>BPWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>BPWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CKFAIL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EINT024_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EINT135_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPABGH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPCDEF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>ISP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>QSPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART46_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>UART57_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>USCI01_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[71]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[72]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[73]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>CLK_EnableModuleClock</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, clk.o(i.CLK_EnableModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[58]"></a>CLK_EnableXtalRC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, clk.o(i.CLK_EnableXtalRC))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[34]"></a>CLK_GetPCLK0Freq</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, clk.o(i.CLK_GetPCLK0Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CLK_GetPCLK0Freq &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
</UL>

<P><STRONG><a name="[36]"></a>CLK_GetPCLK1Freq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, clk.o(i.CLK_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CLK_GetPCLK1Freq &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
</UL>

<P><STRONG><a name="[3a]"></a>CLK_SetHCLK</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, clk.o(i.CLK_SetHCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CLK_SetHCLK &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[5a]"></a>CLK_SetModuleClock</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, clk.o(i.CLK_SetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CLK_SetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[3b]"></a>CLK_WaitClockReady</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, clk.o(i.CLK_WaitClockReady))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[3c]"></a>HAL_Delay</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, main.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Millis
</UL>

<P><STRONG><a name="[27]"></a>Hard_Fault_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, retarget.o(i.Hard_Fault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Hard_Fault_Handler &rArr; stackDump &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stackDump
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> retarget.o(.emb_text)
</UL>
<P><STRONG><a name="[40]"></a>ModbusMaster_ModbusMasterTransaction</STRONG> (Thumb, 1300 bytes, Stack size 296 bytes, modbus_master.o(i.ModbusMaster_ModbusMasterTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = ModbusMaster_ModbusMasterTransaction &rArr; Modbus_Master_Write &rArr; UART_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Write
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Rece_Flush
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Rece_Available
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Read
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Millis
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;word
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowByte
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highByte
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_update
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_readInputRegisters
</UL>

<P><STRONG><a name="[4b]"></a>ModbusMaster_begin</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, modbus_master.o(i.ModbusMaster_begin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ModbusMaster_begin &rArr; Modbus_Master_RB_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_RB_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>ModbusMaster_getResponseBuffer</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, modbus_master.o(i.ModbusMaster_getResponseBuffer))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>ModbusMaster_readInputRegisters</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, modbus_master.o(i.ModbusMaster_readInputRegisters))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = ModbusMaster_readInputRegisters &rArr; ModbusMaster_ModbusMasterTransaction &rArr; Modbus_Master_Write &rArr; UART_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_ModbusMasterTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>Modbus_Master_GetByte</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, trans_recieve_buff_control.o(i.Modbus_Master_GetByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Modbus_Master_GetByte &rArr; UART_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Rece_Handler
</UL>

<P><STRONG><a name="[46]"></a>Modbus_Master_Millis</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, trans_recieve_buff_control.o(i.Modbus_Master_Millis))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modbus_Master_Millis
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_ModbusMasterTransaction
</UL>

<P><STRONG><a name="[4c]"></a>Modbus_Master_RB_Initialize</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, trans_recieve_buff_control.o(i.Modbus_Master_RB_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modbus_Master_RB_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_begin
</UL>

<P><STRONG><a name="[48]"></a>Modbus_Master_Read</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, trans_recieve_buff_control.o(i.Modbus_Master_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modbus_Master_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbPop
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbIsEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_ModbusMasterTransaction
</UL>

<P><STRONG><a name="[47]"></a>Modbus_Master_Rece_Available</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, trans_recieve_buff_control.o(i.Modbus_Master_Rece_Available))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modbus_Master_Rece_Available
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbIsEmpty
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbClear
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_ModbusMasterTransaction
</UL>

<P><STRONG><a name="[44]"></a>Modbus_Master_Rece_Flush</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, trans_recieve_buff_control.o(i.Modbus_Master_Rece_Flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modbus_Master_Rece_Flush
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbClear
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_ModbusMasterTransaction
</UL>

<P><STRONG><a name="[54]"></a>Modbus_Master_Rece_Handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, trans_recieve_buff_control.o(i.Modbus_Master_Rece_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Modbus_Master_Rece_Handler &rArr; Modbus_Master_GetByte &rArr; UART_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_GetByte
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbPush
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART02_IRQHandler
</UL>

<P><STRONG><a name="[45]"></a>Modbus_Master_Write</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, trans_recieve_buff_control.o(i.Modbus_Master_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Modbus_Master_Write &rArr; UART_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_ModbusMasterTransaction
</UL>

<P><STRONG><a name="[57]"></a>SYS_Init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, main.o(i.SYS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SYS_Init &rArr; CLK_SetHCLK &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>SYS_ResetModule</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, sys.o(i.SYS_ResetModule))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[35]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, system_m031series.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPCLK1Freq
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPCLK0Freq
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[28]"></a>SystemInit</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, system_m031series.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>TIMER_GetModuleClock</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, timer.o(i.TIMER_GetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = TIMER_GetModuleClock &rArr; CLK_GetPCLK1Freq &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPCLK1Freq
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPCLK0Freq
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
</UL>

<P><STRONG><a name="[5f]"></a>TIMER_Open</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, timer.o(i.TIMER_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = TIMER_Open &rArr; TIMER_GetModuleClock &rArr; CLK_GetPCLK1Freq &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[e]"></a>TMR0_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(i.TMR0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>Timer_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, main.o(i.Timer_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Timer_Init &rArr; TIMER_Open &rArr; TIMER_GetModuleClock &rArr; CLK_GetPCLK1Freq &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>UART02_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.UART02_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UART02_IRQHandler &rArr; Modbus_Master_Rece_Handler &rArr; Modbus_Master_GetByte &rArr; UART_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Rece_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>UART0_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(i.UART0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = UART0_Init &rArr; UART_Open &rArr; CLK_GetPCLK1Freq &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>UART_Open</STRONG> (Thumb, 374 bytes, Stack size 56 bytes, uart.o(i.UART_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = UART_Open &rArr; CLK_GetPCLK1Freq &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPCLK1Freq
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPCLK0Freq
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[4f]"></a>UART_Read</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, uart.o(i.UART_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_GetByte
</UL>

<P><STRONG><a name="[56]"></a>UART_Write</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, uart.o(i.UART_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Write
</UL>

<P><STRONG><a name="[65]"></a>__0printf$5</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[74]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[3e]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hard_Fault_Handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stackDump
</UL>

<P><STRONG><a name="[49]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, modbus_master.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_ModbusMasterTransaction
</UL>

<P><STRONG><a name="[75]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[76]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[77]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[2a]"></a>fputc</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fputc &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = main &rArr; ModbusMaster_readInputRegisters &rArr; ModbusMaster_ModbusMasterTransaction &rArr; Modbus_Master_Write &rArr; UART_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_readInputRegisters
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_getResponseBuffer
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_begin
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[53]"></a>rbClear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ringbuffer.o(i.rbClear))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Rece_Flush
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Rece_Available
</UL>

<P><STRONG><a name="[50]"></a>rbInitialize</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ringbuffer.o(i.rbInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_RB_Initialize
</UL>

<P><STRONG><a name="[51]"></a>rbIsEmpty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ringbuffer.o(i.rbIsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Rece_Available
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Read
</UL>

<P><STRONG><a name="[52]"></a>rbPop</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ringbuffer.o(i.rbPop))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Read
</UL>

<P><STRONG><a name="[55]"></a>rbPush</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ringbuffer.o(i.rbPush))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Master_Rece_Handler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[37]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, system_m031series.o(i.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[1e]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m031series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m031series.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[5b]"></a>SendChar</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, retarget.o(i.SendChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar_ToUART
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[5c]"></a>SendChar_ToUART</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, retarget.o(i.SendChar_ToUART))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[3f]"></a>stackDump</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, retarget.o(i.stackDump))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = stackDump &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hard_Fault_Handler
</UL>

<P><STRONG><a name="[39]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, uart.o(i.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
</UL>

<P><STRONG><a name="[43]"></a>crc16_update</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, modbus_master.o(i.crc16_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc16_update
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_ModbusMasterTransaction
</UL>

<P><STRONG><a name="[41]"></a>highByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modbus_master.o(i.highByte))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_ModbusMasterTransaction
</UL>

<P><STRONG><a name="[42]"></a>lowByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modbus_master.o(i.lowByte))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_ModbusMasterTransaction
</UL>

<P><STRONG><a name="[4a]"></a>word</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, modbus_master.o(i.word))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusMaster_ModbusMasterTransaction
</UL>

<P><STRONG><a name="[66]"></a>_printf_core</STRONG> (Thumb, 680 bytes, Stack size 96 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[2f]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
